name: CI & Release

permissions:
  contents: write
  packages: write

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  build-and-test:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore -c Release

      - name: Run tests
        run: dotnet test --no-build -c Release

  pack:
    needs: build-and-test
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Build Exporter (net8.0)
        run: dotnet build src/QuickXL.Exporter/QuickXL.Exporter.csproj -c Release -f net8.0

      - name: Build Exporter (netstandard2.0)
        run: dotnet build src/QuickXL.Exporter/QuickXL.Exporter.csproj -c Release -f netstandard2.0

      - name: Build Importer (net8.0)
        run: dotnet build src/QuickXL.Importer/QuickXL.Importer.csproj -c Release -f net8.0

      - name: Build Importer (netstandard2.0)
        run: dotnet build src/QuickXL.Importer/QuickXL.Importer.csproj -c Release -f netstandard2.0

      - name: Pack NuGet package
        run: dotnet pack src/QuickXL.Core/QuickXL.Core.csproj -c Release -o ./nupkg

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: QuickXL-nupkg
          path: ./nupkg/*.nupkg

  publish-nuget:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: pack
    runs-on: ubuntu-latest
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4
        with:
          name: QuickXL-nupkg
          path: ./nupkg

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Publish to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./nupkg/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

  create-github-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: publish-nuget
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            - âš™ Important packaging fix: no external QuickXL.Exporter/Importer dependencies
            - âœ… Multi-target support: net8.0 + netstandard2.0
            - ðŸ›  Exporter and Importer included in single package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
