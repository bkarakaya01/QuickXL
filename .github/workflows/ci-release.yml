name: CI & Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  build-and-test:
    runs-on: windows-latest
    strategy:
      matrix:
        tfm: [net8.0, netstandard2.0]
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET ${{ matrix.tfm }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.tfm }}

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore -c Release -f ${{ matrix.tfm }}

      - name: Test
        run: dotnet test --no-build -c Release -f ${{ matrix.tfm }}

  pack:
    needs: build-and-test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Pack
        run: dotnet pack src/QuickXL.Core/QuickXL.Core.csproj -c Release -o ./nupkg

      - uses: actions/upload-artifact@v3
        with:
          name: nupkg
          path: ./nupkg/*.nupkg

  publish-nuget:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: pack
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: nupkg

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./nupkg/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

  create-github-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: publish-nuget
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            - 🎉 Multi-target support: net8.0 & netstandard2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
